{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the Go-Blocker service.",
        "title": "Go-Blocker API",
        "contact": {
            "name": "Go-Blocker Support",
            "url": "https://example.com",
            "email": "test@mail.ru"
        },
        "version": "0.1"
    },
    "basePath": "/api/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "Returns service status and database connectivity.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment/check/transaction": {
            "post": {
                "description": "Check if a transaction meets the payment requirements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Check a transaction",
                "parameters": [
                    {
                        "description": "Check transaction request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-blocker_internal_application_payment.CheckTxRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-blocker_internal_interface_http_handler.CheckTxResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/payment.InvalidRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid address format",
                        "schema": {
                            "$ref": "#/definitions/payment.InvalidAddress"
                        }
                    },
                    "503": {
                        "description": "failed to check transaction",
                        "schema": {
                            "$ref": "#/definitions/payment.FailedToFind"
                        }
                    }
                }
            }
        },
        "/payment/find/transaction": {
            "post": {
                "description": "Find the latest transaction for a given address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Find the latest transaction",
                "parameters": [
                    {
                        "description": "Check transaction request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-blocker_internal_application_payment.FindTxRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-blocker_internal_interface_http_handler.CheckTxResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/payment.InvalidRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid address format",
                        "schema": {
                            "$ref": "#/definitions/payment.InvalidAddress"
                        }
                    },
                    "503": {
                        "description": "failed to find latest transaction",
                        "schema": {
                            "$ref": "#/definitions/payment.FailedToFind"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "go-blocker_internal_application_payment.CheckTxRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "0xabc123..."
                },
                "currency": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/go-blocker_internal_application_payment.CurrencyType"
                        }
                    ],
                    "example": "USDT"
                },
                "txid": {
                    "type": "string",
                    "example": "0xabc123..."
                }
            }
        },
        "go-blocker_internal_application_payment.CurrencyType": {
            "type": "string",
            "enum": [
                "ETH",
                "USDT",
                "USDC"
            ],
            "x-enum-varnames": [
                "ETH",
                "USDT",
                "USDC"
            ]
        },
        "go-blocker_internal_application_payment.FindTxRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "format": "hex",
                    "example": "0xabc123..."
                },
                "currency": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/go-blocker_internal_application_payment.CurrencyType"
                        }
                    ],
                    "example": "USDT"
                }
            }
        },
        "go-blocker_internal_interface_http_handler.CheckTxResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/go-blocker_internal_interface_http_handler.Status"
                }
            }
        },
        "go-blocker_internal_interface_http_handler.Status": {
            "type": "string",
            "enum": [
                "pending",
                "received",
                "completed",
                "timeout",
                "failed",
                "mismatch"
            ],
            "x-enum-varnames": [
                "Pending",
                "Received",
                "Completed",
                "Timeout",
                "Failed",
                "Mismatch"
            ]
        },
        "payment.FailedToFind": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "failed to find latest transaction"
                }
            }
        },
        "payment.InvalidAddress": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid address format"
                }
            }
        },
        "payment.InvalidRequest": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid request"
                }
            }
        }
    }
}